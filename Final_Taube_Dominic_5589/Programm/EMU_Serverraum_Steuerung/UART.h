//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART.h
// Beschreibung : Header-Datei für UART-Funktionen (Senden, Empfangen, Strings etc.)
// Autor        : Rechner Nr. 5
// Erstellt     : 09.02.2023
//////////////////////////////////////////////////////////////////////////////////////

#pragma once

#define F_CPU 16000000UL
#include <avr/io.h>

//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART_init
// Beschreibung : Initialisiert die UART-Schnittstelle (Baudrate: 9600, 8N1)
// Parameter    : -
// Return       : -
//////////////////////////////////////////////////////////////////////////////////////
void UART_init(void);

//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART_send
// Beschreibung : Sendet ein einzelnes Byte über UART
// Parameter    : uint8_t byte_to_send – zu sendendes Zeichen
// Return       : -
//////////////////////////////////////////////////////////////////////////////////////
void UART_send(uint8_t byte_to_send);

//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART_get_char
// Beschreibung : Empfängt ein einzelnes Byte über UART (wartet ggf.)
// Parameter    : -
// Return       : uint8_t – empfangenes Zeichen
//////////////////////////////////////////////////////////////////////////////////////
uint8_t UART_get_char(void);

//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART_send_string
// Beschreibung : Sendet einen Null-terminierten String über UART
// Parameter    : char* message – Zeiger auf den String
// Return       : -
//////////////////////////////////////////////////////////////////////////////////////
void UART_send_string(char* message);

//////////////////////////////////////////////////////////////////////////////////////
// Name         : UART_send_Integer
// Beschreibung : Wandelt eine Ganzzahl in einen String und sendet diesen
// Parameter    : uint16_t two_byte_to_send – Ganzzahl (0–65535)
// Return       : -
//////////////////////////////////////////////////////////////////////////////////////
void UART_send_Integer(uint16_t two_byte_to_send);
